!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module tdpack ! in 
    interface  ! in :tdpack
        module tdpack ! in :tdpack:tdpack.f90
            real*8, parameter,optional :: ai=2864.887713087
            real*8, parameter,optional :: aw=3135.012829948
            real*8, parameter,optional :: bi=0.166093131502
            real*8, parameter,optional :: bw=2.367075766316
            real*8, parameter,optional :: chlf=334000.0
            real*8, parameter,optional :: chlc=2501000.0
            real*8, parameter,optional :: consol=1367.0
            real*8, parameter,optional :: consol2=1361.0
            real*8, parameter,optional :: cpd=1005.46
            real*8, parameter,optional :: cpv=1869.46
            real*8, parameter,optional :: cpi=2115.3
            real*8, parameter,optional :: cpw=4218.0
            real*8, parameter,optional :: delta=0.6077686814144
            real*8, parameter,optional :: eps1=0.6219800221014
            real*8, parameter,optional :: eps2=0.3780199778986
            real*8, parameter,optional :: grav=9.80616
            real*8, parameter,optional :: karman=0.4
            real*8, parameter,optional :: knams=0.514791
            real*8, parameter,optional :: omega=7.292e-05
            real*8, parameter,optional :: pi=3.141592653589793
            real*8, parameter,optional :: rauw=1000.0
            real*8, parameter,optional :: rayt=6371220.0
            real*8, parameter,optional :: rgasd=287.05
            real*8, parameter,optional :: rgasv=461.51
            real*8, parameter,optional :: ric=0.2
            real*8, parameter,optional :: slp=0.06666666666667
            real*8, parameter,optional :: stefan=5.6698e-08
            real*8, parameter,optional :: stlo=0.0006628486583943
            real*8, parameter,optional :: t1s=273.16
            real*8, parameter,optional :: t2s=258.16
            real*8, parameter,optional :: tcdk=273.15
            real*8, parameter,optional :: tgl=273.16
            real*8, parameter,optional :: trpl=273.16
            real*8, parameter,optional,depend(cpd,rgasd) :: cappa=0.28549121794999305
            real*8, parameter,optional,depend(cpd,rgasd) :: cvd=718.4100000000001
            real*8, parameter,optional :: ttns1=610.78d0
            real*8, parameter,optional :: ttns3w=17.269d0
            real*8, parameter,optional :: ttns3i=21.875d0
            real*8, parameter,optional :: ttns4w=35.86d0
            real*8, parameter,optional :: ttns4i=7.66d0
            real*8, parameter,optional :: aerk1w=610.94d0
            real*8, parameter,optional :: aerk2w=17.625d0
            real*8, parameter,optional :: aerk3w=30.11d0
            real*8, parameter,optional :: aerk1i=611.21d0
            real*8, parameter,optional :: aerk2i=22.587d0
            real*8, parameter,optional :: aerk3i=-0.71d0
            real*8, parameter,optional,depend(cappa) :: cappa_=0.28549121794999305
            real*8, parameter,optional,depend(chlc) :: chlc_=2501000.0
            real*8, parameter,optional,depend(chlf) :: chlf_=334000.0
            real*8, parameter,optional,depend(cpv) :: cpv_=1869.46
            real*8, parameter,optional,depend(delta) :: delta_=0.6077686814144
            real*8, parameter,optional,depend(eps1) :: eps1_=0.6219800221014
            real*8, parameter,optional,depend(eps2) :: eps2_=0.3780199778986
            real*8, parameter,optional,depend(trpl) :: trpl_=273.16
            real*8, parameter,optional :: cte1_=17.625d0*(0.2731600000000e+03-30.11d0)
            real*8, parameter,optional :: cte2_=22.587d0*(0.2731600000000e+03--0.71d0)-17.625d0*(0.2731600000000e+03-30.11d0)
            real*8, parameter,optional :: cte3_=2317d0
            real*8, parameter,optional :: cte4_=7.24d0
            real*8, parameter,optional :: cte5_=128.4d0
            real*8, parameter,optional :: tdpack_offset_fix=0.01d0
            real*8, parameter,optional :: aew1=6.1094d0
            real*8, parameter,optional :: aew2=17.625d0
            real*8, parameter,optional :: aew3=243.05d0
            real*8, parameter,optional :: aei1=6.1121d0
            real*8, parameter,optional :: aei2=22.587d0
            real*8, parameter,optional :: aei3=273.86d0
            function diftrpl_(ttt) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: ttt
                real*8 :: diftrpl_
            end function diftrpl_
            function fn1_(ttt) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: ttt
                real*8 :: fn1_
            end function fn1_
            function maskt(ttt) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: ttt
                real*8 :: maskt
            end function maskt
            function fomults(ddd,ttt) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: ddd
                real*8 intent(in) :: ttt
                real*8 :: fomults
            end function fomults
            function foewf(ttt) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: ttt
                real*8 :: foewf
            end function foewf
            function foew(ttt) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: ttt
                real*8 :: foew
            end function foew
            function foewaf(ttt) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: ttt
                real*8 :: foewaf
            end function foewaf
            function foewa(ttt) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: ttt
                real*8 :: foewa
            end function foewa
            function fodle(ttt) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: ttt
                real*8 :: fodle
            end function fodle
            function foqst(ttt,prs) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: ttt
                real*8 intent(in) :: prs
                real*8 :: foqst
            end function foqst
            function foqstx(prs,ddd) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: prs
                real*8 intent(in) :: ddd
                real*8 :: foqstx
            end function foqstx
            function foqsa(ttt,prs) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: ttt
                real*8 intent(in) :: prs
                real*8 :: foqsa
            end function foqsa
            function fqsmx(ttt,prs,fff) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: ttt
                real*8 intent(in) :: prs
                real*8 intent(in) :: fff
                real*8 :: fqsmx
            end function fqsmx
            function fqsmxx(fesmx8,prs) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: fesmx8
                real*8 intent(in) :: prs
                real*8 :: fqsmxx
            end function fqsmxx
            function fodqs(qst,ttt) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: qst
                real*8 intent(in) :: ttt
                real*8 :: fodqs
            end function fodqs
            function foefq(qqq,prs) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: qqq
                real*8 intent(in) :: prs
                real*8 :: foefq
            end function foefq
            function foqfe(eee,prs) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: eee
                real*8 intent(in) :: prs
                real*8 :: foqfe
            end function foqfe
            function fotvt(ttt,qqq) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: ttt
                real*8 intent(in) :: qqq
                real*8 :: fotvt
            end function fotvt
            function fottv(tvi,qqq) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: tvi
                real*8 intent(in) :: qqq
                real*8 :: fottv
            end function fottv
            function fotvht(ttt,qqq,qqh) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: ttt
                real*8 intent(in) :: qqq
                real*8 intent(in) :: qqh
                real*8 :: fotvht
            end function fotvht
            function fottvh(tvi,qqq,qqh) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: tvi
                real*8 intent(in) :: qqq
                real*8 intent(in) :: qqh
                real*8 :: fottvh
            end function fottvh
            function fodqa(qst,ttt) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: qst
                real*8 intent(in) :: ttt
                real*8 :: fodqa
            end function fodqa
            function fdqsmx(qsm,dlemx) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: qsm
                real*8 intent(in) :: dlemx
                real*8 :: fdqsmx
            end function fdqsmx
            function fohr(qqq,ttt,prs) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: qqq
                real*8 intent(in) :: ttt
                real*8 intent(in) :: prs
                real*8 :: fohr
            end function fohr
            function fohrx(qqq,prs,ddd) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: qqq
                real*8 intent(in) :: prs
                real*8 intent(in) :: ddd
                real*8 :: fohrx
            end function fohrx
            function folv(ttt) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: ttt
                real*8 :: folv
            end function folv
            function fols(ttt) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: ttt
                real*8 :: fols
            end function fols
            function fopoit(t00,pr0,pf) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: t00
                real*8 intent(in) :: pr0
                real*8 intent(in) :: pf
                real*8 :: fopoit
            end function fopoit
            function fopoip(t00,tf,pr0) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: t00
                real*8 intent(in) :: tf
                real*8 intent(in) :: pr0
                real*8 :: fopoip
            end function fopoip
            function fodla(ttt) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: ttt
                real*8 :: fodla
            end function fodla
            function fohra(qqq,ttt,prs) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: qqq
                real*8 intent(in) :: ttt
                real*8 intent(in) :: prs
                real*8 :: fohra
            end function fohra
            function fesif(ttt) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: ttt
                real*8 :: fesif
            end function fesif
            function fesi(ttt) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: ttt
                real*8 :: fesi
            end function fesi
            function fdlesi(ttt) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: ttt
                real*8 :: fdlesi
            end function fdlesi
            function fesmx(ttt,fff) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: ttt
                real*8 intent(in) :: fff
                real*8 :: fesmx
            end function fesmx
            function fesmxx(fff,fesi8,foewa8) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: fff
                real*8 intent(in) :: fesi8
                real*8 intent(in) :: foewa8
                real*8 :: fesmxx
            end function fesmxx
            function fdlesmx(ttt,fff,ddff) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: ttt
                real*8 intent(in) :: fff
                real*8 intent(in) :: ddff
                real*8 :: fdlesmx
            end function fdlesmx
            function fdlesmxx(ttt,fff,ddff,foewa8,fesi8,fesmx8) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: ttt
                real*8 intent(in) :: fff
                real*8 intent(in) :: ddff
                real*8 intent(in) :: foewa8
                real*8 intent(in) :: fesi8
                real*8 intent(in) :: fesmx8
                real*8 :: fdlesmxx
            end function fdlesmxx
            function shuahr(hu,tt,px,swph) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: hu
                real*8 intent(in) :: tt
                real*8 intent(in) :: px
                logical intent(in) :: swph
                real*8 :: shuahr
            end function shuahr
            function sesahu(es,tt,px,swph) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: es
                real*8 intent(in) :: tt
                real*8 intent(in) :: px
                logical intent(in) :: swph
                real*8 :: sesahu
            end function sesahu
            function sesahr(es,tt,px,swph) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: es
                real*8 intent(in) :: tt
                real*8 intent(in) :: px
                logical intent(in) :: swph
                real*8 :: sesahr
            end function sesahr
            function shrahu(hr,tt,px,swph) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: hr
                real*8 intent(in) :: tt
                real*8 intent(in) :: px
                logical intent(in) :: swph
                real*8 :: shrahu
            end function shrahu
            function shuaes(hu,tt,px,swph) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: hu
                real*8 intent(in) :: tt
                real*8 intent(in) :: px
                logical intent(in) :: swph
                real*8 :: shuaes
            end function shuaes
            function shraes(hr,tt,px,swph) ! in :tdpack:tdpack.f90:tdpack
                real*8 intent(in) :: hr
                real*8 intent(in) :: tt
                real*8 intent(in) :: px
                logical intent(in) :: swph
                real*8 :: shraes
            end function shraes
            function svp_water(tt) ! in :tdpack:tdpack.f90:tdpack
                real intent(in) :: tt
                real :: svp_water
            end function svp_water
            function svp_ice(tt) ! in :tdpack:tdpack.f90:tdpack
                real intent(in) :: tt
                real :: svp_ice
            end function svp_ice
            subroutine svp(tt,ni,nj,tpl,swph,res) ! in :tdpack:tdpack.f90:tdpack
                real dimension(ni,nj),intent(in) :: tt
                integer, optional,intent(in),check(shape(tt,0)==ni),depend(tt) :: ni=shape(tt,0)
                integer, optional,intent(in),check(shape(tt,1)==nj),depend(tt) :: nj=shape(tt,1)
                real intent(in) :: tpl
                logical intent(in) :: swph
                real dimension(ni,nj),intent(out),depend(ni,nj) :: res
            end subroutine svp
            function rpn_svp_water(tt) ! in :tdpack:tdpack.f90:tdpack
                real intent(in) :: tt
                real :: rpn_svp_water
            end function rpn_svp_water
            function rpn_svp_ice(tt) ! in :tdpack:tdpack.f90:tdpack
                real intent(in) :: tt
                real :: rpn_svp_ice
            end function rpn_svp_ice
            subroutine rpn_svp(tt,ni,nj,tpl,swph,res) ! in :tdpack:tdpack.f90:tdpack
                real dimension(ni,nj),intent(in) :: tt
                integer, optional,intent(in),check(shape(tt,0)==ni),depend(tt) :: ni=shape(tt,0)
                integer, optional,intent(in),check(shape(tt,1)==nj),depend(tt) :: nj=shape(tt,1)
                real intent(in) :: tpl
                logical intent(in) :: swph
                real dimension(ni,nj),intent(out),depend(ni,nj) :: res
            end subroutine rpn_svp
            subroutine vppr_from_hr(hr,svp,ni,nj,res) ! in :tdpack:tdpack.f90:tdpack
                real dimension(ni,nj),intent(in) :: hr
                real dimension(ni,nj),intent(in),depend(ni,nj) :: svp
                integer, optional,intent(in),check(shape(hr,0)==ni),depend(hr) :: ni=shape(hr,0)
                integer, optional,intent(in),check(shape(hr,1)==nj),depend(hr) :: nj=shape(hr,1)
                real dimension(ni,nj),intent(out),depend(ni,nj) :: res
            end subroutine vppr_from_hr
            subroutine vppr_from_hu(hu,px,ni,nj,res) ! in :tdpack:tdpack.f90:tdpack
                real dimension(ni,nj),intent(in) :: hu
                real dimension(ni,nj),intent(in),depend(ni,nj) :: px
                integer, optional,intent(in),check(shape(hu,0)==ni),depend(hu) :: ni=shape(hu,0)
                integer, optional,intent(in),check(shape(hu,1)==nj),depend(hu) :: nj=shape(hu,1)
                real dimension(ni,nj),intent(out),depend(ni,nj) :: res
            end subroutine vppr_from_hu
            subroutine vppr_from_qv(qv,px,ni,nj,res) ! in :tdpack:tdpack.f90:tdpack
                real dimension(ni,nj),intent(in) :: qv
                real dimension(ni,nj),intent(in),depend(ni,nj) :: px
                integer, optional,intent(in),check(shape(qv,0)==ni),depend(qv) :: ni=shape(qv,0)
                integer, optional,intent(in),check(shape(qv,1)==nj),depend(qv) :: nj=shape(qv,1)
                real dimension(ni,nj),intent(out),depend(ni,nj) :: res
            end subroutine vppr_from_qv
            function vppr_water_td(td) ! in :tdpack:tdpack.f90:tdpack
                real intent(in) :: td
                real :: vppr_water_td
            end function vppr_water_td
            function vppr_ice_td(td) ! in :tdpack:tdpack.f90:tdpack
                real intent(in) :: td
                real :: vppr_ice_td
            end function vppr_ice_td
            subroutine vppr_from_td(td,tt,ni,nj,tpl,swph,res) ! in :tdpack:tdpack.f90:tdpack
                real dimension(ni,nj),intent(in) :: td
                real dimension(ni,nj),intent(in),depend(ni,nj) :: tt
                integer, optional,intent(in),check(shape(td,0)==ni),depend(td) :: ni=shape(td,0)
                integer, optional,intent(in),check(shape(td,1)==nj),depend(td) :: nj=shape(td,1)
                real intent(in) :: tpl
                logical intent(in) :: swph
                real dimension(ni,nj),intent(out),depend(ni,nj) :: res
            end subroutine vppr_from_td
            subroutine rpn_vppr_from_hu(hu,px,ni,nj,res) ! in :tdpack:tdpack.f90:tdpack
                real dimension(ni,nj),intent(in) :: hu
                real dimension(ni,nj),intent(in),depend(ni,nj) :: px
                integer, optional,intent(in),check(shape(hu,0)==ni),depend(hu) :: ni=shape(hu,0)
                integer, optional,intent(in),check(shape(hu,1)==nj),depend(hu) :: nj=shape(hu,1)
                real dimension(ni,nj),intent(out),depend(ni,nj) :: res
            end subroutine rpn_vppr_from_hu
            function rpn_vppr_water_td(td) ! in :tdpack:tdpack.f90:tdpack
                real intent(in) :: td
                real :: rpn_vppr_water_td
            end function rpn_vppr_water_td
            function rpn_vppr_ice_td(td) ! in :tdpack:tdpack.f90:tdpack
                real intent(in) :: td
                real :: rpn_vppr_ice_td
            end function rpn_vppr_ice_td
            subroutine rpn_vppr_from_td(td,tt,ni,nj,tpl,swph,res) ! in :tdpack:tdpack.f90:tdpack
                real dimension(ni,nj),intent(in) :: td
                real dimension(ni,nj),intent(in),depend(ni,nj) :: tt
                integer, optional,intent(in),check(shape(td,0)==ni),depend(td) :: ni=shape(td,0)
                integer, optional,intent(in),check(shape(td,1)==nj),depend(td) :: nj=shape(td,1)
                real intent(in) :: tpl
                logical intent(in) :: swph
                real dimension(ni,nj),intent(out),depend(ni,nj) :: res
            end subroutine rpn_vppr_from_td
            subroutine td_from_es(tt,es,ni,nj,res) ! in :tdpack:tdpack.f90:tdpack
                real dimension(ni,nj),intent(in) :: tt
                real dimension(ni,nj),intent(in),depend(ni,nj) :: es
                integer, optional,intent(in),check(shape(tt,0)==ni),depend(tt) :: ni=shape(tt,0)
                integer, optional,intent(in),check(shape(tt,1)==nj),depend(tt) :: nj=shape(tt,1)
                real dimension(ni,nj),intent(out),depend(ni,nj) :: res
            end subroutine td_from_es
            subroutine rpn_hu_from_hr(tt,hr,px,ni,nj,swph,res) ! in :tdpack:tdpack.f90:tdpack
                real dimension(ni,nj),intent(in) :: tt
                real dimension(ni,nj),intent(in),depend(ni,nj) :: hr
                real dimension(ni,nj),intent(in),depend(ni,nj) :: px
                integer, optional,intent(in),check(shape(tt,0)==ni),depend(tt) :: ni=shape(tt,0)
                integer, optional,intent(in),check(shape(tt,1)==nj),depend(tt) :: nj=shape(tt,1)
                logical intent(in) :: swph
                real dimension(ni,nj),intent(out),depend(ni,nj) :: res
            end subroutine rpn_hu_from_hr
        end module tdpack
    end interface 
end python module tdpack

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
