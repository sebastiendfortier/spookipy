** English















*Description:*

- Calculation of the distances on a horizontal grid between each point
  of which we know the latitude and longitude.\\
  The distance can be calculated in three different ways on each axis of
  the grid :

  - centered distance    : for one given point, angular distance between
    the previous point and the next point
  - forward distance      : for one given point, angular distance
    between the point and the next point
  - backward distance   : for one given point, angular distance between
    the point and the previous point

*Iteration method:*

- Point-by-point

*Dependencies:*

- Grid of points (on at least one axis) of which we know the latitudes
  and longitudes respectively

*Result(s):*

- The distances GDX (X axis) and GDY (Y axis) between each point of the
  given grid (meters)

*Algorithm:*

#+begin_quote
  For R, the mean radius of the Earth allowing to convert the angular
  distances GDX and GDY from radians to meters.\\
  \\
  For all the points i of latitude \(\lambda\) (radians) and longitude
  \(\varphi\) (radians), we use, depending on the value of the
  "differenceType" key,\\
  the appropriate trigonometric formula to calculate the angular
  distances :\\
  \\
  If axis = X then\\
  \\
     If differenceType = CENTERED then\\
  \\
          \(\mbox{ $GDX_{i} = R \cdot \arccos[\sin \lambda_{i-1} \cdot
  \sin \lambda_{i+1} + \cos \varphi_{i-1} \cdot \cos \varphi_{i+1} \cdot
  \cos (\varphi_{i+1} - \varphi_{i-1})]$}\)\\
  \\
          For the 1st level:\\
              \(\mbox{ $GDX_{i} = R \cdot \arccos[\sin \lambda_{i} \cdot
  \sin \lambda_{i+1} + \cos \varphi_{i} \cdot \cos \varphi_{i+1} \cdot
  \cos (\varphi_{i+1} - \varphi_{i})]$}\)\\
  \\
          For the last level:\\
              \(\mbox{ $GDX_{i} = R \cdot \arccos[\sin \lambda_{i} \cdot
  \sin \lambda_{i-1} + \cos \varphi_{i} \cdot \cos \varphi_{i-1} \cdot
  \cos (\varphi_{i} - \varphi_{i-1})]$}\)\\
  \\
     Else if differenceType = FORWARD then\\
  \\
          \(\mbox{ $GDX_{i} = R \cdot \arccos[\sin \lambda_{i} \cdot
  \sin \lambda_{i+1} + \cos \varphi_{i} \cdot \cos \varphi_{i+1} \cdot
  \cos (\varphi_{i+1} - \varphi_{i})]$}\)\\
  \\
          For the last level:\\
              \(\mbox{ $GDX_{i} = R \cdot \arccos[\sin \lambda_{i} \cdot
  \sin \lambda_{i-1} + \cos \varphi_{i} \cdot \cos \varphi_{i-1} \cdot
  \cos (\varphi_{i} - \varphi_{i-1})]$}\)\\
  \\
     Else if differenceType = BACKWARD then\\
  \\
          \(\mbox{ $GDX_{i} = R \cdot \arccos[\sin \lambda_{i} \cdot
  \sin \lambda_{i-1} + \cos \varphi_{i} \cdot \cos \varphi_{i-1} \cdot
  \cos (\varphi_{i} - \varphi_{i-1})]$}\)\\
  \\
          For the 1st level:\\
              \(\mbox{ $GDX_{i} = R \cdot \arccos[\sin \lambda_{i} \cdot
  \sin \lambda_{i+1} + \cos \varphi_{i} \cdot \cos \varphi_{i+1} \cdot
  \cos (\varphi_{i+1} - \varphi_{i})]$}\)\\
  \\
     End if\\
  \\
  Else if axis = Y then\\
     We proceed in the same way but with the points situated on the Y
  axis\\
  End if
#+end_quote

\\
*/Note:/* The latitudes and longitudes must be in radians in the
trigonometric formula.
*References:*

- [[http://mathworld.wolfram.com/GreatCircle.html][Great Circle]]

*Keywords:*

- grille/grid, point, distance, centrée/centered, arrière/backward,
  avant/forward

*Usage:*

*Call example:* ==

#+begin_example
   ...
   spooki_run "[ReaderStd         --input $SPOOKI_DIR/pluginsRelatedStuff/GridPointDistance/testsFiles/inputFile.std] >>
               [GridPointDistance --axis X,Y --differenceType CENTERED] >>
               [WriterStd         --output /tmp/$USER/outputFile.std]"
   ...
   
#+end_example

*Results validation:*

*Contacts:*

- Author : [[https://wiki.cmc.ec.gc.ca/wiki/User:Klasam][Marc Klasa]]
- Coded by : [[https://wiki.cmc.ec.gc.ca/wiki/User:Fortinf][François
  Fortin]]
- Support : [[https://wiki.cmc.ec.gc.ca/wiki/CMDW][CMDW]] /
  [[https://wiki.cmc.ec.gc.ca/wiki/CMDS][CMDS]]

Reference to 


Units tests



*Uses:*\\

*Used by:*\\



  

